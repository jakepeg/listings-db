{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\n\nconst AddActivityForm = props => {\n  const defaultData = {\n    name: '',\n    description: '',\n    rating: '',\n    image: '',\n    cover: '',\n    longDesc: ''\n  };\n  const formData = props.initialData ? _objectSpread({}, props.initialData) : defaultData;\n  const {\n    0: form,\n    1: setForm\n  } = useState(formData);\n\n  const handleChange = event => {\n    console.log('handleChange');\n    const target = event.target;\n    const name = target.name;\n    setForm(_objectSpread({}, form, {\n      [name]: target.value\n    }));\n  };\n\n  const handleCategoryChange = event => {\n    const {\n      options\n    } = event.target;\n    const optionsLength = options.length;\n    let value = [];\n\n    for (let i = 0; i < optionsLength; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setForm(_objectSpread({}, form, {\n      category: value.toString()\n    }));\n  };\n\n  const submitForm = () => {\n    props.handleFormSubmit(_objectSpread({}, form));\n  };\n\n  return __jsx(\"form\", null, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"Name\"), __jsx(\"input\", {\n    value: form.name,\n    onChange: handleChange,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    name: \"name\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Lord of the Rings\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"description\"\n  }, \"Description\"), __jsx(\"input\", {\n    onChange: handleChange,\n    value: form.description,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    name: \"description\",\n    placeholder: \"Somewhere in Middle-earth...\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"description\"\n  }, \"Rating\"), __jsx(\"input\", {\n    onChange: handleChange,\n    value: form.rating,\n    type: \"number\",\n    max: \"5\",\n    min: \"0\",\n    className: \"form-control\",\n    id: \"rating\",\n    name: \"rating\",\n    placeholder: \"3\"\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\"\n  }, \"Max: 5, Min: 0 \")), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"image\"\n  }, \"Image\"), __jsx(\"input\", {\n    onChange: handleChange,\n    value: form.image,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"image\",\n    name: \"image\",\n    placeholder: \"http://.....\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"cover\"\n  }, \"Cover\"), __jsx(\"input\", {\n    onChange: handleChange,\n    value: form.cover,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"cover\",\n    name: \"cover\",\n    placeholder: \"http://......\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"longDesc\"\n  }, \"Long Description\"), __jsx(\"textarea\", {\n    onChange: handleChange,\n    value: form.longDesc,\n    className: \"form-control\",\n    id: \"longDesc\",\n    name: \"longDesc\",\n    rows: \"3\"\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"category\"\n  }, \"Category\"), __jsx(\"select\", {\n    onChange: handleCategoryChange,\n    multiple: true,\n    className: \"form-control\",\n    id: \"category\",\n    name: \"category\"\n  }, __jsx(\"option\", null, \"Adventure Sports\"), __jsx(\"option\", null, \"Attractions\"), __jsx(\"option\", null, \"Art, Crafts and Cooking\"), __jsx(\"option\", null, \"Birthday Parties\"), __jsx(\"option\", null, \"Events\"), __jsx(\"option\", null, \"Holiday Camps\"), __jsx(\"option\", null, \"Parks and Skate Parks\"), __jsx(\"option\", null, \"Performing Arts\"), __jsx(\"option\", null, \"Play Centres\"), __jsx(\"option\", null, \"Sport and Games\"), __jsx(\"option\", null, \"Theme Parks and Water Parks\"))), __jsx(\"button\", {\n    onClick: submitForm,\n    type: \"button\",\n    className: \"btn btn-primary\"\n  }, props.submitButton || 'Add Activity'));\n};\n\nexport default AddActivityForm;","map":null,"metadata":{},"sourceType":"module"}